{"version":3,"file":"default-src_app_services_database_place_service_ts.js","mappings":"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","sources":["./src/app/services/database/place.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { AngularFirestore } from \"@angular/fire/compat/firestore\";\r\nimport { BehaviorSubject, Observable, Subject } from \"rxjs\";\r\nimport { Place } from \"src/app/shared/place\";\r\nimport distance from \"@turf/distance\";\r\nimport { Point } from \"src/app/shared/point\";\r\nimport { GeolocationService } from \"../geolocation.service\";\r\n\r\nexport declare type Units = \"meters\" | \"millimeters\" | \"centimeters\" | \"kilometers\" | \"acres\" | \"miles\" | \"nauticalmiles\" | \"inches\" | \"yards\" | \"feet\" | \"radians\" | \"degrees\" | \"hectares\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PlaceService {\r\n  /**Se guardan los lugares del departamento seleccionado */\r\n  places: BehaviorSubject<Place[]>;\r\n  /**Nombre del departamento seleccionado actualmente*/\r\n  depto: string = null;\r\n  /**Distancia seleccionada actualmente */\r\n  distance: number = null;\r\n  /**Departamento actual para usar cuando se selecciona filtro por distancia */\r\n  currentDpto: string = null;\r\n  /**Guarda todos los lugares del departamento seleccionado actualmente*/\r\n  allLugares: Place[] = [];\r\n  /**Se van acumulando todos los lugares de los departamentos seleccionados */\r\n  initPlace: Place[] = [];\r\n  /** Guarda el nombre de los departamentos que ya fueron seleccionados por el usuario*/\r\n  save_depto: string[] = [];\r\n  /**Lugar seleccionado*/\r\n  place_selected: BehaviorSubject<Place>;\r\n  /**Lugar seleccionado para utilizar en búsuqeda de lugares cercanos */\r\n  near_place: Place;\r\n  /**Se guardan todos los lugares con la distancia desde el lugar seleccionado */\r\n  distance_place: any[] = [];\r\n  /**Guarda los 4 lugares más cercanos al seleccionado */\r\n  near_places: BehaviorSubject<any[]>;\r\n  /**guarda la posición actual del usuario */\r\n  posicion$: Observable<Point>;\r\n  /**se guardan los lugares recibidos desde el filtro distancia */\r\n  distancePlaces: Place[] = [];\r\n  /**controla si la base devuelve datos */\r\n  noData: boolean = false;\r\n  /**controla que existen lugares en el rango de distancia */\r\n  controlDistance: boolean = false;\r\n\r\n  deptoLimit: any[] = [\r\n    { nameDepto: \"Artigas\", limit: [\"Artigas\", \"Salto\", \"Rivera\"] },\r\n    {\r\n      nameDepto: \"Canelones\",\r\n      limit: [\"Canelones\", \"Florida\", \"Lavalleja\", \"Maldonado\", \"San José\"],\r\n    },\r\n    {\r\n      nameDepto: \"Cerro Largo\",\r\n      limit: [\r\n        \"Cerro Largo\",\r\n        \"Durazno\",\r\n        \"Rivera\",\r\n        \"Tacuarembó\",\r\n        \"Treinta y Tres\",\r\n      ],\r\n    },\r\n    {\r\n      nameDepto: \"Colonia\",\r\n      limit: [\"Colonia\", \"Flores\", \"San José\", \"Soriano\"],\r\n    },\r\n    {\r\n      nameDepto: \"Durazno\",\r\n      limit: [\r\n        \"Durazno\",\r\n        \"Cerro Largo\",\r\n        \"Flores\",\r\n        \"Florida\",\r\n        \"Río Negro\",\r\n        \"Soriano\",\r\n        \"Tacuarembó\",\r\n        \"Treinta y Tres\",\r\n      ],\r\n    },\r\n    {\r\n      nameDepto: \"Flores\",\r\n      limit: [\r\n        \"Flores\",\r\n        \"Colonia\",\r\n        \"Durazno\",\r\n        \"Florida\",\r\n        \"Río Negro\",\r\n        \"San José\",\r\n        \"Soriano\",\r\n      ],\r\n    },\r\n    {\r\n      nameDepto: \"Florida\",\r\n      limit: [\r\n        \"Florida\",\r\n        \"Canelones\",\r\n        \"Durazno\",\r\n        \"Flores\",\r\n        \"Lavalleja\",\r\n        \"San José\",\r\n        \"Treinta y Tres\",\r\n      ],\r\n    },\r\n    {\r\n      nameDepto: \"Lavalleja\",\r\n      limit: [\r\n        \"Lavalleja\",\r\n        \"Canelones\",\r\n        \"Florida\",\r\n        \"Maldonado\",\r\n        \"Rocha\",\r\n        \"Treinta y Tres\",\r\n      ],\r\n    },\r\n    {\r\n      nameDepto: \"Maldonado\",\r\n      limit: [\"Maldonado\", \"Canelones\", \"Lavalleja\", \"Rocha\"],\r\n    },\r\n    { nameDepto: \"Montevideo\", limit: [\"Montevideo\", \"Canelones\", \"San José\"] },\r\n    {\r\n      nameDepto: \"Paysandú\",\r\n      limit: [\"Paysandú\", \"Río Negro\", \"Salto\", \"Tacuarembó\"],\r\n    },\r\n    {\r\n      nameDepto: \"Río Negro\",\r\n      limit: [\r\n        \"Río Negro\",\r\n        \"Durazno\",\r\n        \"Flores\",\r\n        \"Paysandú\",\r\n        \"Soriano\",\r\n        \"Tacuarembó\",\r\n      ],\r\n    },\r\n    {\r\n      nameDepto: \"Rivera\",\r\n      limit: [\"Rivera\", \"Artigas\", \"Cerro Largo\", \"Salto\", \"Tacuarembó\"],\r\n    },\r\n    {\r\n      nameDepto: \"Rocha\",\r\n      limit: [\"Rocha\", \"Maldonado\", \"Lavalleja\", \"Treinta y Tres\"],\r\n    },\r\n    {\r\n      nameDepto: \"Salto\",\r\n      limit: [\"Salto\", \"Artigas\", \"Paysandú\", \"Rivera\", \"Tacuarembó\"],\r\n    },\r\n    {\r\n      nameDepto: \"San José\",\r\n      limit: [\r\n        \"San José\",\r\n        \"Canelones\",\r\n        \"Colonia\",\r\n        \"Flores\",\r\n        \"Florida\",\r\n        \"Soriano\",\r\n      ],\r\n    },\r\n    {\r\n      nameDepto: \"Soriano\",\r\n      limit: [\r\n        \"Soriano\",\r\n        \"Colonia\",\r\n        \"Durazno\",\r\n        \"Flores\",\r\n        \"Río Negro\",\r\n        \"San José\",\r\n      ],\r\n    },\r\n    {\r\n      nameDepto: \"Tacuarembó\",\r\n      limit: [\r\n        \"Tacuarembó\",\r\n        \"Cerro Largo\",\r\n        \"Durazno\",\r\n        \"Paysandú\",\r\n        \"Río Negro\",\r\n        \"Rivera\",\r\n        \"Salto\",\r\n      ],\r\n    },\r\n    {\r\n      nameDepto: \"Treinta y Tres\",\r\n      limit: [\r\n        \"Treinta y Tres\",\r\n        \"Cerro Largo\",\r\n        \"Durazno\",\r\n        \"Florida\",\r\n        \"Lavalleja\",\r\n        \"Rocha\",\r\n        \"Tacuarembó\",\r\n      ],\r\n    },\r\n  ];\r\n\r\n  constructor(\r\n    private afs: AngularFirestore,\r\n    private geolocationSvc: GeolocationService\r\n  ) {\r\n    this.places = new BehaviorSubject<Place[]>(this.initPlace);\r\n  }\r\n\r\n  /**\r\n   * Devuelve los lugares del departamento seleccionado por el usuario\r\n   * @param searchDepto se utiliza para chequear si el departamento ya fue seleccionado anteriormente\r\n   */\r\n  getPlaces(checkDepto: string) {\r\n    this.depto = localStorage.getItem(\"deptoActivo\");\r\n    this.distance = parseInt(localStorage.getItem(\"distanceActivo\"));\r\n    this.allLugares = [];\r\n    this.distancePlaces = [];\r\n\r\n    this.controlDistance = false;\r\n\r\n    let searchDepto: boolean = false;\r\n\r\n    const options:Units = \"kilometers\";\r\n\r\n    if (this.depto != null) {\r\n      this.save_depto.forEach((search) => {\r\n        if (search == this.depto) {\r\n          searchDepto = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.depto != null && !searchDepto) {\r\n      this.afs\r\n        .collection(\"lugares\")\r\n        .ref.where(\"departamento\", \"==\", this.depto)\r\n        .where(\"publicado\", \"==\", true)\r\n        .orderBy(\"prioridad\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const mapPlaces = new Map();\r\n          querySnapshot.forEach((item) => {\r\n            const data: any = item.data();\r\n\r\n            let placesRequest = { id: item.id, ...data };\r\n            mapPlaces.set(placesRequest.id, { ...data });\r\n\r\n            let test = this.initPlace.find(function (element) {\r\n              return element.id === placesRequest.id;\r\n            });\r\n\r\n            if (test === undefined) {\r\n              this.initPlace.push(placesRequest);\r\n            }\r\n          });\r\n          this.allLugares = JSON.parse(JSON.stringify([...mapPlaces.values()]));\r\n\r\n          if (\r\n            this.geolocationSvc.posicion !== undefined &&\r\n            this.geolocationSvc.posicion !== null\r\n          ) {\r\n            this.allLugares.forEach((dist) => {\r\n              let calcDist = distance(\r\n                [\r\n                  this.geolocationSvc.posicion.longitud,\r\n                  this.geolocationSvc.posicion.latitud,\r\n                ],\r\n                [dist.ubicacion.lng, dist.ubicacion.lat],\r\n                {units: options}\r\n              );\r\n              dist.distancia = calcDist;\r\n              dist.distanciaNumber = calcDist;\r\n            });\r\n          } else if (\r\n            this.geolocationSvc.posicion === undefined ||\r\n            this.geolocationSvc.posicion === null\r\n          ) {\r\n            this.allLugares.forEach((dist) => {\r\n              dist.distancia = \"Ubicación no activa\";\r\n              dist.distanciaNumber = \"Ubicación no activa\";\r\n            });\r\n          }\r\n\r\n          if (querySnapshot.size !== 0) {\r\n            this.save_depto.push(this.depto);\r\n            this.noData = false;\r\n          } else this.noData = true;\r\n\r\n          this.places.next(this.allLugares);\r\n\r\n          searchDepto = false;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .finally(() => \"Fin\");\r\n    } else if (this.depto != null && searchDepto) {\r\n      this.initPlace.forEach((res) => {\r\n        if (res.departamento == this.depto) {\r\n          this.allLugares.push(res);\r\n        }\r\n      });\r\n\r\n      if (\r\n        this.geolocationSvc.posicion !== undefined &&\r\n        this.geolocationSvc.posicion !== null\r\n      ) {\r\n        this.allLugares.forEach((dist) => {\r\n          let calcDist = distance(\r\n            [\r\n              this.geolocationSvc.posicion.longitud,\r\n              this.geolocationSvc.posicion.latitud,\r\n            ],\r\n            [dist.ubicacion.lng, dist.ubicacion.lat],\r\n            {units: options}\r\n          );\r\n          dist.distancia = calcDist;\r\n          dist.distanciaNumber = calcDist;\r\n        });\r\n      }\r\n\r\n      this.allLugares.length !== 0 ? (this.noData = false) : this.noData;\r\n\r\n      this.places.next(this.allLugares);\r\n    } else if (this.distance != null) {\r\n      let deptoSearch: boolean = false;\r\n      let limitCurrent: string[] = [];\r\n\r\n      this.deptoLimit.forEach((res) => {\r\n        if (res.nameDepto == checkDepto) {\r\n          res.limit.forEach((dep: string) => {\r\n            limitCurrent.push(dep);\r\n          });\r\n        }\r\n      });\r\n\r\n      limitCurrent.forEach((dep: string) => {\r\n        if (this.save_depto.length != 0) {\r\n          this.save_depto.forEach((search) => {\r\n            if (dep == search) {\r\n              deptoSearch = true;\r\n            }\r\n          });\r\n        }\r\n\r\n        if (deptoSearch) {\r\n          this.initPlace.forEach((init: any) => {\r\n            if (init.departamento == dep) this.distancePlaces.push(init);\r\n          });\r\n\r\n          if (\r\n            this.geolocationSvc.posicion !== undefined &&\r\n            this.geolocationSvc.posicion !== null\r\n          ) {\r\n            this.distancePlaces.forEach((dist) => {\r\n              let calcDist = distance(\r\n                [\r\n                  this.geolocationSvc.posicion.longitud,\r\n                  this.geolocationSvc.posicion.latitud,\r\n                ],\r\n                [dist.ubicacion.lng, dist.ubicacion.lat],\r\n                {units: options}\r\n              );\r\n              dist.distancia = calcDist;\r\n              dist.distanciaNumber = calcDist;\r\n\r\n              if (calcDist <= this.distance) {\r\n                this.controlDistance = true;\r\n              }\r\n            });\r\n          }\r\n\r\n          deptoSearch = false;\r\n        } else {\r\n          this.afs\r\n            .collection(\"lugares\")\r\n            .ref.where(\"departamento\", \"==\", dep)\r\n            .where(\"publicado\", \"==\", true)\r\n            .orderBy(\"prioridad\")\r\n            .get()\r\n            .then((querySnapshot) => {\r\n              querySnapshot.forEach((item) => {\r\n                const data: any = item.data();\r\n\r\n                let placeDist = { id: item.id, ...data };\r\n\r\n                let test = this.initPlace.find(function (element) {\r\n                  return element.id === placeDist.id;\r\n                });\r\n\r\n                if (test === undefined) {\r\n                  this.initPlace.push(placeDist);\r\n                  this.distancePlaces.push(placeDist);\r\n                }\r\n              });\r\n\r\n              if (\r\n                this.geolocationSvc.posicion !== undefined &&\r\n                this.geolocationSvc.posicion !== null\r\n              ) {\r\n                this.distancePlaces.forEach((dist) => {\r\n                  let calcDist = distance(\r\n                    [\r\n                      this.geolocationSvc.posicion.longitud,\r\n                      this.geolocationSvc.posicion.latitud,\r\n                    ],\r\n                    [dist.ubicacion.lng, dist.ubicacion.lat],\r\n                    {units: options}\r\n                  );\r\n                  dist.distancia = calcDist;\r\n                  dist.distanciaNumber = calcDist;\r\n\r\n                  if (calcDist <= this.distance) {\r\n                    this.controlDistance = true;\r\n                  }\r\n                });\r\n              }\r\n\r\n              if (!searchDepto && querySnapshot.size !== 0)\r\n                this.save_depto.push(dep);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            })\r\n            .finally(() => \"Fin\");\r\n          deptoSearch = false;\r\n        }\r\n      });\r\n      this.distancePlaces.length !== 0\r\n        ? (this.noData = false)\r\n        : (this.noData = true);\r\n\r\n      this.places.next(this.distancePlaces);\r\n    }\r\n\r\n    return this.places;\r\n  }\r\n\r\n  /**Devuelve un lugar específico\r\n   * @param id del lugar a buscar\r\n   */\r\n  getPlaceId(id: string) {\r\n    this.place_selected = new BehaviorSubject<Place>(null);\r\n    this.near_place = null;\r\n\r\n    this.initPlace.forEach((res) => {\r\n      if (res.id == id) {\r\n        res.descripcionCorta =\r\n          res.descripcion.replace(/<\\/?[^>]+(>|$)/g, \"\").substring(0, 140) +\r\n          \"...\" +\r\n          `<a>Ver más</a>`;\r\n        this.near_place = res;\r\n        this.place_selected.next(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**Busca los 4 lugares más cercanos al lugar seleccionado*/\r\n  getPlaceNear() {\r\n    this.near_places = new BehaviorSubject<any[]>(null);\r\n    this.distance_place = [];\r\n    let options:Units = \"kilometers\";\r\n\r\n    this.initPlace.forEach((res) => {\r\n      if (res.id != this.near_place.id && res.departamento == this.depto) {\r\n        let dist = distance(\r\n          [this.near_place.ubicacion.lng, this.near_place.ubicacion.lat],\r\n          [res.ubicacion.lng, res.ubicacion.lat],\r\n          {units: options}\r\n        );\r\n\r\n        this.distance_place.push({\r\n          id: res.id,\r\n          name: res.nombre,\r\n          image: res.imagenPrincipal,\r\n          distance: dist,\r\n        });\r\n      } else if (res.id != this.near_place.id && this.distance !== null) {\r\n        let dist = distance(\r\n          [this.near_place.ubicacion.lng, this.near_place.ubicacion.lat],\r\n          [res.ubicacion.lng, res.ubicacion.lat],\r\n          {units: options}\r\n        );\r\n\r\n        this.distance_place.push({\r\n          id: res.id,\r\n          name: res.nombre,\r\n          image: res.imagenPrincipal,\r\n          distance: dist,\r\n        });\r\n      }\r\n    });\r\n\r\n    this.distance_place.sort((a, b) =>\r\n      a.distance > b.distance ? 1 : b.distance > a.distance ? -1 : 0\r\n    );\r\n\r\n    while (this.distance_place.length > 4) {\r\n      this.distance_place.pop();\r\n    }\r\n\r\n    this.near_places.next(this.distance_place);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}