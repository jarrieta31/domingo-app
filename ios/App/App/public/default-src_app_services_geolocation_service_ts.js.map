{"version":3,"file":"default-src_app_services_geolocation_service_ts.js","mappings":"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","sources":["./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js","./src/app/services/geolocation.service.ts"],"sourcesContent":["import { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n    return (source) => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\nclass TakeUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.seenValue = false;\n    }\n    notifyNext() {\n        this.seenValue = true;\n        this.complete();\n    }\n    notifyComplete() {\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport * as Mapboxgl from \"mapbox-gl\";\nimport { environment } from \"../../environments/environment\";\nimport { Observable, BehaviorSubject, Subscription, timer, Subject } from \"rxjs\";\nimport { Place } from \"../shared/place\";\nimport { TwoPoints } from \"../shared/two-points\";\nimport { Point } from \"../shared/point\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { GpsProvider } from \"../providers/gps-provider.service\";\nimport { Geolocation, PositionOptions, Position } from '@capacitor/geolocation';\nimport { Device, DeviceInfo } from '@capacitor/device';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GeolocationService {\n\n  deviceInfo: DeviceInfo;\n  items: Place[] = [];\n  sourceMatch$: Observable<any>;\n  mapa: Mapboxgl.Map;\n  myPositionMarker: any = null;\n  points: Point[];\n  private unsubscribeGPS$: Subject<void>;\n  isWatching: boolean;\n  distancia: number;\n  posicion$: BehaviorSubject<Point>;\n  posicion: Point = { longitud: 0, latitud: 0 };\n  latCenter: number = 0;\n  longCenter: number = 0;\n  timetest: any;\n  sourceClock$: Observable<any> = timer(0, 36000);\n  sourceGpsSubject$ = new BehaviorSubject(null);\n  public gps: boolean = false;\n  subscriptionClock: any;\n  public currentDepto: string = null;\n  subscriptionWatch$: Subscription;\n  featureDepto: any[] = [];\n  obsGelocation$: Observable<Position>;\n  options: PositionOptions = { enableHighAccuracy: true, timeout: 5000, maximumAge: 60000 };\n\n  constructor(\n    private gpsProvider: GpsProvider\n  ) {\n    this.unsubscribeGPS$ = new Subject<void>();\n    this.gps = this.gpsProvider.gps;\n    this.deviceInfo = this.gpsProvider.deviceInfo;\n    this.posicion = this.gpsProvider.posicion;\n    if (this.gps) {\n      this.posicion$ = new BehaviorSubject<Point>(this.posicion);\n    } else {\n      this.posicion$ = new BehaviorSubject<Point>(null);\n    }\n    this.startGeolocation();\n  }\n\n  startGeolocation() {\n    if (this.gps) {\n      //Observable que obtiene los pulsos y obtiene la posicion\n      this.sourceClock$\n        .pipe(takeUntil(this.unsubscribeGPS$))\n        .subscribe((res) => {\n          console.log(res);\n          if (!this.deviceInfo.isVirtual) {\n            Geolocation.getCurrentPosition(this.options)\n              .then((p) => {\n                if (p !== null) {\n                  this.posicion = {\n                    longitud: p.coords.longitude,\n                    latitud: p.coords.latitude,\n                  };\n                  this.posicion$.next(this.posicion);\n                  this.actualizarMarcador();\n                }\n              })\n              .catch((error) => {\n                //this.posicion = environment.casaDominga;\n                this.actualizarPosicion$(null);\n                if (this.myPositionMarker != null) this.myPositionMarker.remove();\n                this.gps = false;\n                console.log(\"Error al obtener la ubicación\" + error);\n              });\n\n          } else {\n            this.posicion$.next({ latitud: -34.33940051728305, longitud: -56.713930578444064 })\n            this.actualizarMarcador();\n          }\n        });\n    }\n  }\n\n  stopGeolocation() {\n    this.unsubscribeGPS$.next();\n    this.unsubscribeGPS$.complete();\n  }\n\n  actualizarMarcador() {\n    if (this.myPositionMarker != null) {\n      this.myPositionMarker.remove();\n      this.myPositionMarker\n        .setLngLat([this.posicion.longitud, this.posicion.latitud])\n        .addTo(this.mapa);\n    }\n  }\n\n  crearMapa(points: Array<Point>) {\n    // si el gps está activo crea el mapa con el marcador\n    var centro: Point;\n    var maxmin: TwoPoints;\n    var zoom: number;\n    this.points = points;\n    Mapboxgl.accessToken = environment.mapBoxToken;\n    if (this.gps) {\n      if (this.points.length > 1) {\n        //agrega la posicion actual a la lista de puntos\n        this.points.push(this.posicion);\n        maxmin = this.getMaxMinPoints(this.points);\n        centro = this.getCenterPoints(maxmin);\n        this.distancia = this.calculateDistance(maxmin);\n        zoom = this.calculateZoom(this.distancia);\n      }\n\n      this.mapa = new Mapboxgl.Map({\n        container: \"mapaBox\",\n        style: \"mapbox://styles/casadominga/ck9m4w6x10dd61iql4bh7jinz\",\n        antialias: true,\n        center: [centro.longitud, centro.latitud],\n        zoom: zoom,\n      });\n\n      this.createMarker();\n    } else {\n      // Si el gps está desactivado\n      if (this.points.length > 1) {\n        maxmin = this.getMaxMinPoints(this.points);\n        centro = this.getCenterPoints(maxmin);\n        this.distancia = this.calculateDistance(maxmin);\n        zoom = this.calculateZoom(this.distancia);\n      }\n\n      if (this.points.length == 1) {\n        centro = {\n          longitud: this.points[0].longitud,\n          latitud: this.points[0].latitud,\n        };\n        zoom = 12;\n        console.log(centro.longitud);\n      }\n\n      this.mapa = new Mapboxgl.Map({\n        container: \"mapaBox\",\n        style: \"mapbox://styles/casadominga/ck9m4w6x10dd61iql4bh7jinz\",\n        antialias: true,\n        center: [centro.longitud, centro.latitud],\n        zoom: zoom,\n      });\n    }\n\n    this.mapa.addControl(new Mapboxgl.NavigationControl());\n  }\n\n  createMarker() {\n    //Crea html para el marcador\n    var el = document.createElement(\"div\");\n    el.className = \"marker\";\n    el.style.backgroundImage = 'url(\"/assets/icon/marcador_celeste.svg\")';\n    el.style.width = \"30px\";\n    el.style.height = \"30px\";\n    el.style.borderRadius = \"50%\";\n    el.style.boxShadow = \"1px 1px 40px #81bdda\";\n    //Agrega el marcador al mapa\n    this.myPositionMarker = new Mapboxgl.Marker(el, { draggable: false })\n      .setLngLat([this.posicion.longitud, this.posicion.latitud])\n      .addTo(this.mapa);\n    //Agrega la posición del usuario a la lista de puntos\n    this.points.push(this.posicion as Point);\n    //Recalcula los puntos extremos\n    let maxmin: TwoPoints = this.getMaxMinPoints(this.points);\n    //Recalcula el centro del mapa\n    let centro: Point = this.getCenterPoints(maxmin);\n    this.distancia = this.calculateDistance(maxmin);\n    let zoom = this.calculateZoom(this.distancia);\n    this.mapa.setCenter([centro.longitud, centro.latitud]);\n    this.mapa.setZoom(zoom);\n  }\n\n  // Recibe 2 Puntos y obtiene el centro retornando un Point\n  getCenterPoints(Points: TwoPoints): Point {\n    let center: Point = { latitud: 0, longitud: 0 };\n    center.latitud = (Points.latitud1 + Points.latitud2) / 2;\n    center.longitud = (Points.longitud1 + Points.longitud2) / 2;\n    return center;\n  }\n\n  /* Recibe un array de lugares y calcula los Points mas alejados y retorna un array numérico \n    con las coordenadas de ambos  */\n  getMaxMinPoints(points: Array<Point>): TwoPoints {\n    let maxmin: TwoPoints = {\n      latitud1: 0,\n      latitud2: 0,\n      longitud1: 0,\n      longitud2: 0,\n    };\n    let longMax: number = 0;\n    let longMin: number = 0;\n    let latMax: number = 0;\n    let latMin: number = 0;\n    for (let i = 0; i < points.length; i++) {\n      if (i == 0) {\n        longMax = +points[i].longitud;\n        longMin = +points[i].longitud;\n        latMax = +points[i].latitud;\n        latMin = +points[i].latitud;\n      } else {\n        if (longMin > +points[i].longitud) longMin = +points[i].longitud;\n        if (latMin > +points[i].latitud) latMin = +points[i].latitud;\n        if (longMax < +points[i].longitud) longMax = +points[i].longitud;\n        if (latMax < +points[i].latitud) latMax = +points[i].latitud;\n      }\n    }\n    maxmin.latitud1 = latMin;\n    maxmin.longitud1 = longMin;\n    maxmin.latitud2 = latMax;\n    maxmin.longitud2 = longMax;\n    console.log(`LatMin ${latMin} LongMin ${longMin}`);\n    return maxmin;\n  }\n\n  createMarkerCenter(centro: Point) {\n    //Crea html para el marcador\n    var el = document.createElement(\"div\");\n    el.className = \"marker2\";\n    el.style.backgroundColor = \"rgb(255,30,100)\";\n    //el.style.backgroundImage = 'url(\"/assets/icon/marcador_azul.svg\")';\n    el.style.width = \"20px\";\n    el.style.height = \"20px\";\n    el.style.borderRadius = \"50%\";\n    el.style.boxShadow = \"1px 1px 20px #81bdda\";\n    //Agrega el marcador al mapa\n    this.myPositionMarker = new Mapboxgl.Marker(el, { draggable: false })\n      .setLngLat([centro.longitud, centro.latitud])\n      .addTo(this.mapa);\n  }\n\n  calculateDistance(pts: TwoPoints): number {\n    let p = 0.017453292519943295;\n    let c = Math.cos;\n    let a =\n      0.5 -\n      c((pts.latitud1 - pts.latitud2) * p) / 2 +\n      (c(pts.latitud2 * p) *\n        c(pts.latitud1 * p) *\n        (1 - c((pts.longitud1 - pts.longitud2) * p))) /\n      2;\n    let dis = 12742 * Math.asin(Math.sqrt(a));\n    return Math.trunc(dis);\n  }\n\n  calculateZoom(distancia: number): number {\n    let zoom: number = 1;\n    //El primer valor es la distancia y el segundo el zoom para ese rango de distancia\n    let rangos = [\n      [5, 12.6],\n      [10, 12.6],\n      [15, 11.5],\n      [20, 11],\n      [40, 9.5],\n      [60, 8],\n      [80, 7.5],\n      [100, 7],\n      [120, 6.5],\n      [150, 6],\n      [180, 5.5],\n      [200, 5],\n    ];\n    for (let i = 0; i < rangos.length; i++) {\n      for (let j = 0; j < rangos[i].length; j++) {\n        console.log(rangos[i][0]);\n        if (distancia <= rangos[i][0]) {\n          zoom = rangos[i][1];\n          return zoom;\n        }\n      }\n    }\n    return zoom;\n  }\n\n  getObsPosicion$(): Observable<Point> {\n    return this.posicion$.asObservable();\n  }\n\n  actualizarPosicion$(point: Point) {\n    this.posicion = point;\n    this.posicion$.next(this.posicion);\n  }\n\n  clearDatosMapa() {\n    this.points = [];\n\n    this.mapa.clearSorage();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}