{"version":3,"file":"node_modules_capacitor-community_text-to-speech_dist_esm_web_js.js","mappings":"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","sources":["./node_modules/@capacitor-community/text-to-speech/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class TextToSpeechWeb extends WebPlugin {\n    constructor() {\n        super();\n        this.speechSynthesis = null;\n        if ('speechSynthesis' in window) {\n            this.speechSynthesis = window.speechSynthesis;\n            window.addEventListener('beforeunload', () => {\n                this.stop();\n            });\n        }\n    }\n    async speak(options) {\n        if (!this.speechSynthesis) {\n            this.throwUnsupportedError();\n        }\n        await this.stop();\n        const speechSynthesis = this.speechSynthesis;\n        const utterance = this.createSpeechSynthesisUtterance(options);\n        return new Promise((resolve, reject) => {\n            utterance.onend = () => {\n                resolve();\n            };\n            utterance.onerror = (event) => {\n                reject(event);\n            };\n            speechSynthesis.speak(utterance);\n        });\n    }\n    async stop() {\n        if (!this.speechSynthesis) {\n            this.throwUnsupportedError();\n        }\n        this.speechSynthesis.cancel();\n    }\n    async getSupportedLanguages() {\n        const voices = this.getSpeechSynthesisVoices();\n        const languages = voices.map(voice => voice.lang);\n        const filteredLanguages = languages.filter((v, i, a) => a.indexOf(v) == i);\n        return { languages: filteredLanguages };\n    }\n    async getSupportedVoices() {\n        const voices = this.getSpeechSynthesisVoices();\n        return { voices };\n    }\n    async isLanguageSupported(options) {\n        const result = await this.getSupportedLanguages();\n        const isLanguageSupported = result.languages.includes(options.lang);\n        return { supported: isLanguageSupported };\n    }\n    async openInstall() {\n        this.throwUnimplementedError();\n    }\n    createSpeechSynthesisUtterance(options) {\n        const voices = this.getSpeechSynthesisVoices();\n        const utterance = new SpeechSynthesisUtterance();\n        const { text, lang, rate, pitch, volume, voice } = options;\n        if (voice) {\n            utterance.voice = voices[voice];\n        }\n        if (volume) {\n            utterance.volume = volume >= 0 && volume <= 1 ? volume : 1;\n        }\n        if (rate) {\n            utterance.rate = rate >= 0.1 && rate <= 10 ? rate : 1;\n        }\n        if (pitch) {\n            utterance.pitch = pitch >= 0 && pitch <= 2 ? pitch : 2;\n        }\n        if (lang) {\n            utterance.lang = lang;\n        }\n        utterance.text = text;\n        return utterance;\n    }\n    getSpeechSynthesisVoices() {\n        if (!this.speechSynthesis) {\n            this.throwUnsupportedError();\n        }\n        if (!this.supportedVoices || this.supportedVoices.length < 1) {\n            this.supportedVoices = this.speechSynthesis.getVoices();\n        }\n        return this.supportedVoices;\n    }\n    throwUnsupportedError() {\n        throw this.unavailable('SpeechSynthesis API not available in this browser.');\n    }\n    throwUnimplementedError() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\n"],"names":["WebPlugin","TextToSpeechWeb","constructor","speechSynthesis","window","addEventListener","stop","speak","options","throwUnsupportedError","utterance","createSpeechSynthesisUtterance","Promise","resolve","reject","onend","onerror","event","cancel","getSupportedLanguages","voices","getSpeechSynthesisVoices","languages","map","voice","lang","filteredLanguages","filter","v","i","a","indexOf","getSupportedVoices","isLanguageSupported","result","includes","supported","openInstall","throwUnimplementedError","SpeechSynthesisUtterance","text","rate","pitch","volume","supportedVoices","length","getVoices","unavailable","unimplemented"],"sourceRoot":"webpack:///"}